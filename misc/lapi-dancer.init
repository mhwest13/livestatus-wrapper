#!/bin/bash
### BEGIN INIT INFO
# Provides:
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts lapi dancer
# Description:       starts lapi dancer
### END INIT INFO

. /lib/lsb/init-functions

################################################################################
## Configuration Options
################################################################################

NAME=lapi-dancer

## Writable location that the $RUN_AS user can write to
## Also modify the "pidfile" chkconfig option above to match
PIDFILE=/var/run/$NAME.pid

## Location of the plackup bin, usally installed via CPAN
BIN=/usr/bin/plackup

## Mode that plack should run in
## see http://search.cpan.org/~miyagawa/Plack-0.9986/scripts/plackup
## for more information
MODE=production

## See http://plackperl.org/#servers for more servers
SERVER=Starman

## Number of worker processes that should be spawned
## This option is passed through to the chosen "server"
WORKERS=8

## Either a port or a socket
LISTEN=127.0.0.1:8080

## Path to the PSGI application you want to run
APP=/opt/livestatus-api/lapi/bin/app.pl

################################################################################

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

USER=root

test -x $DAEMON || exit 0

set -e

function start_app()
{
    start-stop-daemon -c $USER --start --exec $BIN -- \
	-E $MODE -s $SERVER --workers=$WORKERS --listen=$LISTEN \
	-a $APP --pid=$PIDFILE -D
}

function stop_app()
{
    start-stop-daemon --stop --pidfile $PIDFILE --retry 5
    rm -f $PIDFILE
}

case "$1" in
  start)
        echo "Starting $NAME: "
        start_app
        echo "[Done]"
        ;;
  stop)
        echo "Stopping $NAME: "
        stop_app
        echo "[Done]"
        ;;
  restart)
        echo "Stopping $NAME: "
        stop_app
        echo "[Done]"

        echo "Starting $NAME: "
        start_app
        echo "[Done]"
        ;;
  status)
        status_of_proc -p $PIDFILE $NAME $NAME && exit 0 || exit $?
        ;;
  *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit 0
